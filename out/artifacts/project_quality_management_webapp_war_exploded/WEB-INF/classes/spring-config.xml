<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"      
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      
       xmlns:p="http://www.springframework.org/schema/p"      
       xmlns:mvc="http://www.springframework.org/schema/mvc"      
       xmlns:context="http://www.springframework.org/schema/context"      
       xmlns:util="http://www.springframework.org/schema/util"      
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd      
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.1.xsd      
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd      
            http://www.springframework.org/schema/util   
            http://www.springframework.org/schema/util/spring-util-4.1.xsd">
            
    <!-- 使用注解式注入 -->
	<!-- <context:annotation-config />临时注释 -->
	<!-- service和dao包(自动注入) -->
	<context:component-scan base-package="com.isoftstone" >
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>        
   	<bean id="propertyConfigurerCore"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
       <property name="locations">  
           <list>  
               <value>classpath:config.properties</value>  
           </list> 
       </property>  
       <!-- 邮件的主题是中文，文件是UTF-8的编码 -->
       <property name="fileEncoding" value="UTF-8"/>
    </bean> 
    <!-- Kaptcha验证码生成器 -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha" scope="singleton">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
            <description>
            kaptcha.border  是否有边框  默认为true  我们可以自己设置yes，no  
            kaptcha.border.color   边框颜色，合法值： r,g,b (and optional alpha) 或者 white,black,blue.  
            kaptcha.border.thickness  边框粗细度  默认为1  
            kaptcha.producer.impl   验证码生成器  默认为DefaultKaptcha  
            kaptcha.textproducer.impl   验证码文本生成器  默认为DefaultTextCreator  
            kaptcha.textproducer.char.string   验证码文本字符内容范围  默认为abcde2345678gfynmnpwx  
            kaptcha.textproducer.char.length   验证码文本字符长度  默认为5  
            kaptcha.textproducer.font.names    验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)  
            kaptcha.textproducer.font.size   验证码文本字符大小  默认为40  
            kaptcha.textproducer.font.color  验证码文本字符颜色  默认为Color.BLACK  
            kaptcha.textproducer.char.space  验证码文本字符间距  默认为2  
            kaptcha.noise.impl    干扰实现类 验证码噪点生成对象  默认为DefaultNoise  
            kaptcha.noise.color   验证码噪点颜色   默认为Color.BLACK  
            kaptcha.obscurificator.impl   验证码样式引擎  默认为WaterRipple  ,图片样式： 水纹com.google.code.kaptcha.impl.WaterRipple
                鱼眼com.google.code.kaptcha.impl.FishEyeGimpy
                阴影com.google.code.kaptcha.impl.ShadowGimpy
            kaptcha.word.impl   验证码文本字符渲染   默认为DefaultWordRenderer  
            kaptcha.background.impl   验证码背景生成器   默认为DefaultBackground  
            kaptcha.background.clear.from   验证码背景颜色渐进   默认为Color.LIGHT_GRAY  
            kaptcha.background.clear.to   验证码背景颜色渐进   默认为Color.WHITE  
            kaptcha.image.width   验证码图片宽度  默认为200  
            kaptcha.image.height  验证码图片高度  默认为50
            kaptcha.session.key session中存放验证码的key键
            kaptcha.session.date The date the kaptcha is generated is put into the HttpSession. This is the key value for that item in the session.
            </description>
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.session.key">kaptcha.code</prop>  
                        <!-- 无边框 -->
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.textproducer.font.color">black</prop>
                        <prop key="kaptcha.textproducer.char.string">abcde345678gfynmnpwx</prop>
                        <!-- 渲染效果：水纹：WaterRipple；鱼眼：FishEyeGimpy；阴影：ShadowGimpy -->
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                        <!-- 不要噪点 -->
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.image.width">90</prop>
                        <prop key="kaptcha.image.height">33</prop>
                        <prop key="kaptcha.textproducer.font.size">25</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.char.space">5</prop>
                        <!-- 和登录框背景颜色一致 -->
                        <prop key="kaptcha.background.clear.from">247,247,247</prop>
                        <prop key="kaptcha.background.clear.to">247,247,247</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
	
	 <import resource="spring-core.xml" />
	<!-- mybatis 配置 -->
	<import resource="spring/spring-mybatis.xml" />
	<import resource="spring/spring-cache.xml"/>
	<!--<import resource="spring/spring-redis.xml"/>-->
	<!-- <import resource="spring-task.xml"/> -->
	<!-- <import resource="spring-interceptor.xml"/> -->
</beans>